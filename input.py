# 大大鸣 github 版   https://github.com/985Ming/qlk 点颗小星星，不点到不了账的后果自负
# 有问题请及时联系大大鸣 v:xolag29638099  （有其他想要的脚本也可以联系，尽量试着写一写）
# 环境变量 dadaming_lanseck  抓取 Authorization 的值和userID
# 多账号 使用#   例如：账号1Authorization&userID1#账号2Authorization&userID2
#入口 在大大鸣交流群 
# ❗❗重要通知 ❗❗
#不点到不了账的后果自负
#不点到不了账的后果自负
#   --------------------------------祈求区--------------------------------
#                     _ooOoo_
#                    o8888888o
#                    88" . "88
#                    (| -_- |)
#                     O\ = /O
#                 ____/`---'\____
#               .   ' \\| |// `.
#                / \\||| : |||// \
#              / _||||| -:- |||||- \
#                | | \\\ - /// | |
#              | \_| ''\---/'' | |
#               \ .-\__ `-` ___/-. /
#            ___`. .' /--.--\ `. . __
#         ."" '< `.___\_<|>_/___.' >'"".
#        | | : `- \`.;`\ _ /`;.`/ - ` : | |
#          \ \ `-. \_ __\ /__ _/ .-` / /
#  ======`-.____`-.___\_____/___.-`____.-'======
#                     `=---='
#
#  .............................................
#           佛祖保佑             永无BUG
#           佛祖镇楼             BUG辟邪
#   --------------------------------代码区--------------------------------
import sys
import zlib
import base64
import marshal
import hashlib
from itertools import cycle


from itertools import cycle

def custom_decode(data, salt='86DWmiCFjRDQG0FF', magic=8008):
    result = bytearray()
    for b, salt_char in zip(data, cycle(salt.encode())):
        result.append((b - salt_char - magic) % 256)
    return bytes(result)


def decrypt(data='_*fxY5WR(XNV$Sods9d9PP{2A@A@uR6H=6Ahk&W6FfL8i&CK`uCC#Kx4>_eiL9{|x&9r1U053A*G{M4S8Aabn(pFVjrpF<3hPEuL?I$l@=>srK)(NlPBq9g6fBU|Mp-M3u9EO34Xx4d&Ep6wO54=B&LD6e+&2t5NKeOwDoFIS2taXVrh$m=8b2V#Kq?dY3A9-7NdS@Elbahfjuh>zwm;r`B&U5mN8GL1KlYPn!sbGYA1oVuxueXbVjFXCTpGAX@KJxwT(!~3zRInx;&x=pMNsjleUb)hnmSjs702@aVhOaJ5e};LT*RXSIfq7_njapkx?|FCPvj}=HsaZvj?l!?~YV8Y^`lWRJfOm_ZJ8mhBuTHyPq;*(np(cZpdY}!Gw)`EQo8F3Gou7JU4sMB!X^D!0qLgThkJ$<s4wDNNXPrx)p!52@mzY{eK2{8dW($6WoFHmUtHJe_a`^pILRp)RtT*O{mR(0UCALay{q{E;t&jFJNQK19QD`BhSIr8MNMMP8z1A2TEaStBa`{9AZFgXu%u#Dp2|3`!w!e7h^mc-5_;nK|E_R5BM+cdZ%&JO^r!@<fbtA=1e9#7rv=o0ec^M^>QkRV{dPP&7bFCJJaR-PH94C#;bW3|*6tJU=hsSGnj%C$u1$C?4=#3aP&AG~!rBD@pnQV3cxeM>2kfEz^uyB^ccwbY%lrWYkzL;V}jA#*k;ED>GDwl2x(~zBR=I4xhOI?bXtgvK-v4fkKcmM4Je|nStGbn3~*O=>=g?ECTeq{@fud9G1gweZ`l3^*W$UTVTzb}7qkQQUh&2hP*l3WT3k|3)6rV$%ZiE~v+Z!8*|tLQO*JrRrgqH}rqc?pA_7C&NvrDF?<eXqF;|78ej%B{1AkO>5h-giiHe|q_oIG`(vo|#!0u4gf={Y6OrYpAll-<VNI#PJHCeRjtYGwyARMOm$YVqgVK^Ibb;b1;RCD!$6BL_XbZJg0$~I!+(00#ZfhX4H$~V{IjyHXy3IS16h0qGk}*>!)>;(P=>$Y;ZWWh6hiZ+X)^U{FHxQe=aS0phN^@6~!K~=+tMqG7H_OFUyvnb!)%H&Y0W|R^eX41P_!cP>VbjmL&CHI>VdGCr<V(UvZDm|7brO|GMHtXSeo|V+Z{}@@;OzvZ>yQrxf&*$*V)9<&z=tE^*f6Wvmvcne`7qzbrl&d{|k|n%$8Qm9oGTUq{*3#57gesM*mE&4qnw5%{$*+ec$qEra1j2ouoS0AMBPAx+CLyCGFF_Ao=KyA9ARX@JL=U#+y88W^>%X+|hp_6bp`a}r^w7v!x%!>FrJ9!wEFqBE*LXZhOoTgh20Tu*n0*u?<}(G;kvUu^LDl}HkEkq4XIn)8?HdW-fYN2liGJPO@<NY-9w`k)}#|I4&wiq8J1H20KPW=>M{f=4=^dB{B5XG3&DZhly|^(R#7t~qe*56c0r3^8dSlFm5wTDxg77gf_vUy`RSR5$YIF5jtB7^u<V+gO@Jd>;toHcLn5CqV6X5wmwEkmqE<$#8lI4lu?sGBeW&NJEqlKNMVLt(JXpUcsq!vqTF5>~r%WhkL<h!zM#0;Gm>*s9ZeT)Xb!}&zUF+I0*YfVC6C_CG*D!OoH5-Qn;!_Fe7y*-|OIiF;1;(c0Mz<w~_)OZPOO6NE5kr2P-9+%!2EOwyG92^#fo(5>q_r#eY<q6^Z7FnHQW$D^L+~S0)}F*h?o8ZSyCELw4$eoe$hcDh~S8WCNL1t7D{XhIQ-^V8-JQyq7MoDf3^obC{skZA{qB0pK}zLK&Qlj9{M}<oO*rq@35s@OHP-J(<4FdxogO#021BdBs>J>2db6O_t_flp1d9Q?zc7tqFHR`^i-|%*b;HaehSi@z_E`D!50$^bVB&+*QoS7gkz@s4H2_2L}5#E9#41YuA*++X^z&9zA9u?77KX@ghwrp`iW@e2ze`LbJo9H*eeIm^ELm%|DyinbLVzmkDE<G<r6EbCCKwhZNBc$J5D~K0K~1@a`_@D>b$7S@CW%6ZMQPu$BpA?~7)ODdl?^d>>*oBbeMJ;4skE_=iy|SiLGnj*T?}#=xajV1Op}CO2)6b(iMpykrG`j9H*tycM$?jZmjTxm0;^0TnoU?@{d)1gX$~-XtG7`CjzdQ%YkkBX3<6j90R$CTs*`vk8BZr{{O!Uwfu>Ec1vsuteX051$@IZUq2VIX-F*BZ8`$3(U0Sl-)g9{bbMA-x^>u*@+8J66@z7=d$|;=j|ix8Z-!YX$*)8OA~n|9`_{tzX4J<D0L?V$NZgVMKg^#l|txVH&3-i2ZYpA(7Z~ET!u&!y@x&50rY2CLG*D|Nef_8MD=woWQ!XMK~<U}@<lU7(+_<N*uvL~EA!wGFl0e^xsp8!AZVs%y<P=W`XCqvr#AppRarO!tGshNksLw+Y<z23jHs0t(R)>k*O8eYNO7zOb9Ocw2|HoCe=P{@AfBz7c90W4?J7KkjH$t_A=1cjnPvExs7NtvEr3th+>myb$qI580Qg3W>IlTWcuz5=Ck5g?6-aVr3sPr}gJmXmbwZq2>7m@)V`Zp7`{y~iOJCn%y$wDpc7ys{sV!6>9chAO9=?baYw02&d48<3Qt{1fFU%lro7kWL(j;*Drl9dWQTDj_sGoaNrxVphUG$S%7eDqfa>Bun$V_3fYci=N9R{*$0w%;QH?!I5V8m>;zDHM*6<-zLt7=sJ%OYQCVOSm8eqH8YH6=+DOkw`@f3|)GMNW7zw{IcEgdoI6VfWB3N#_5;iGw9bS0G7wH$YR#o14||4AqnhuArf$+k-`4f1{F#=M+O;f^`26Z%0?GwOmG^;-*n$+hd(TGo?Wl3Yr7=+e82&e%o`D%(FeWrJXEd;}1A)y9!l@Afpmio)>GjoBeOA|BR=f$w4qCNZ(9aX!9Jh)eD-U$tiAyi){r9Vtbfl&%MmUv0*$Vg$n^i8(cF>3@iu7_~7;)N6dGi9u*LNO_GFoLMyL*%r9J-Y6_0rFW_nQ79)0ylV!_9*yA}O#@>4Yja{anUi{H2SPkNT)#4CBOpT7;Nc_g_-{E82eFW7mPK-rRmB_+#i!*1Xi4V68BGB>H{zAw*89-=l6yczJxi?==8yryAa!#{GB#&N|R^fv-dPl{@o8Z&^Rc2v!ne(hdc8Gj@2=&)ngr=k{Ak_jI)y#Ipl1l_{`$p?I@F8Ty3CaRAkK@h9lC3o5EL}T@yk=K&OI-*mI*p3fV9GpSj+WIW-*IyS0_j{EvLpZQ5*e}~6MSN`#L?(It<kPXwfPthYbTE9j6>(!HOH%bjfRA=%Ey1rtKX%?dk*bE7?8?(V~GDa+0W6nBt^)=DQW=FsK|rfY!}^JRa7cHt&C;=5Vgf+6P`&Jv}r~H$OG5xlq8*_o?AjFzQWJUzG?J%A}%W=sW9S-H79@<xh05NpGvD>qstt)szk1z{oC;I9q8|MqYb{J_fTF8RGzWtCk)qvD=6>WZ7)>tg^P9;021~;3bQ-9Kp~=Fwv0q1TWS?pO=K6lGO@4BX@hnkzU>A7Q9iV69yFl`X<&N=q7ZfH<|ez%w`o_&5Zw4A*slOp*|1#8=?>{<c<)Ke?%R(vGs1I6MyQIEvCTJT_&1f*b{YZ8buHGCueH@q+bkQYwKMFJ_C(kPMxucWR7A-R|EciUDQrB`&0Jriw_5JH-9hk)>_2`|L!4~^0PR%qELA*qN$8d$V(A4)Nw*7w;c(2nWc$?bkUjv+R!8R+7I<Zk53;zVjvc1aqjbhk>~k35<6DfXgcsl|<KVqsQ+^Kp3!&29!QZ3K#rN;<Yv*Rx*@kmFHTr1lKwyL8_tDhMoJmo_2o30wU_KK3{RkTgs~<cksE#lYpp4y8eo2Nw@hA-mXMGpoy~SI@^d0KcJ?qg~{cQ6A#8k&r8{u=3>Y`JEh=A==`<MpTtKZQWR^B#zLSvqk0K-M)wfbHG-lrLMnC9W6ql+?ls10zOQwf_yNnP@_E9u@uEs?|RYfaB#MVe;wSi&vwgb)ebN}@J~2yS4k3U<6Wr`%Sq>6}uMpfz;h)THCT-JH5OPV{T>x2C(Nz~RHF`bzs5tE}|Oig1qP3S+9#p1i3GXk)MHN>Z!L>Tb9cVp>CgG;U5g^B7T;RUJ*d`P@z<oo?Qhe++JCeL*>X%dcE|-QQXMzde9{B`tCc!4Sd}(<RKmpB4|9{g&mi+Jch!Bd_Fm!OZ-zWofRO%72t+T~gQ7ONj9K9eJAO9uH-IbR7NHvTx-zI))PLkupqGl`bKT9!V6-Os`V+<??I0p}WSo5I{r=A|=gBX898gp*6+dYsD|*YtR8y^+`IM>G1RaO3MwL(4#5@&Zfc+oXG=T97R4SsKt7TP?}XZqLU^Zsm5ugWu^4>HnN9Tw9DOx-7LPdBO)*{vZurR#0AJRzi0@4B0n&`-T0{BT0jl16n8QDGYWwn{DZZTPiJvIZ2r{>OvhbpcFau6%-uO(p?O_LEbOH%cgaTTz=6iuE%hjDepfW|Pg0<|V|VNb6qgo{d#=3Px`8*<h8=$z^n`y3CrdQ&nX577WqyC~r$C4r&o_X&YC*HrKk5OZvnuMc394u<);m5X!E7<X$B-LgZ%!pg$<ZgRp4jod`{!L-KqmkM%%a_TKF*yH9)nqP{}k<XiUbVV?dT4MOEs4)8@C;Nx#a5F))Ov-h>$42H<aDKK~FPBQcB_*TvcpD21XU03CiB;le*w-HSKEamCT@z{h@Pc&8vJd#(MWVj1*YQY;`g;BzQ&O&c4P0a)=ELz@I_J{tkCc%WmuymBzvLQY$E}H(>KPjdG@UE@PpM3MG?VZDDA^<pc_H$b!y-(LI@*g?O<y$#ZQ33}(x02>VT&vJlbnX+G!qo8Gq`N|}FZjxrBCVE7pB3=27Ny8eGQ`K*wJ9~<kumF)mQ11}EQ(S_~)DJqSTT)HSW|HkIX-5PhtGKt#7=o}hvNbCF<o|HrOCy3|dR<qMtK)Ab5gKVwMPZUO1uJ~(i_PS=q#H@O*1jfhILU0MA+gs5*I_5;5`jMNc3niAz308W5fEM17=87*@0N69HUmgMKs+m)_t$hSZ;Lkj|cAoLyo<N>iq2HAYh-f|}kO<Ud!GL>ZU0`q21_Qw@OiT+UpFwXlQ3!9D`gTVw0oi-(d5K1NpIaA(CM#F<-FsG13dy=&5|h1ehL7k;J!E^(|8>Y>dMZ{{AID^M!{)Ou9|R;F*JcdtcT?3WgQQY3(<GMRsn(;;hq}$$TxL7~V1eg$FV{!<LF8991VG`TBZ2hdhEASr12OjTQMIu3_Dy7mY38!*V6MO4R`uv|s~_H04RZ$qMUS!b=jzEg7ci$?4M0FA2PhbTo2F~2OU6XCD(!G;DjEgTgv=Nw;yKMi-FVj~fh8knJJdHkxu+59GLN$`F9NOL>>v7s4ValLmJDP^K{dZj32RDN-4mI+UJ6sAZnpDw9jW>CJnHGDIMUn;pugPD<lL+roBmK1Nm0HxK=n9k8=wxuC;N1Ry>DW<z#OLW+dC8jj5N#-Bg6D$CT+@hUE=8qt~AaWRc7mq4EbvlT;DtnhLO2yTKWshT78{Byb$6ug)?%LA)CDt{NlIR#RNv_=$_HI>@-LO_e&Q!AUGT&5rE|*!zaTSdSv4MVmuK5*NH+{plC2TBvP;TdFoO*lVZJVCsa@|eXv@Ns#l(U)h`Q>3VyRC^tj(~V56b3YIk8YQ-4zFjmpdqswYHZ?%m;ySc_HDn0As*G>Ku&-M9#AL`S%#-&NEfVO3fJP!>I}vi-&<bF}yFOuf0nIuXt7JX=%phFRrKd?Xf7B1z)$F=Kj3_Cd`jU?Nez3o%`?9li))m;mY+1-KgB^=hxdkHrKrWc*77B%VWfPPk8OwgMupuO=J<YW+Hv3?Z<Oo6+PI(Q1YvyQ4I0x+=iaT)%}`5L&;p6;o+i`nvEd0`CebKWRZl>(^nMx|c2_hO?~%RaY)2m9e}`pD8&oYL)cJ)It~+uIqC4mk|w&MvK+U(L+XP&$}-*GkHiF6zQ-u*E@G@-QgAGx^lX+#uH@e+YL-3)4>i>GW=&UgYmaCf;A{N-KL69AWwj|OXL!DR(<k)s?=@b*1EhHb{X$9WFukcjruw&Hi9EOnoH9Fqa_dLi3ko|DZup<K+Pcl*;J#CO3hABlVza|BYWVT6loFGZ83ZpdN@t<Bq%gw=8?wLZOFT&ob0W}(M<d!h05kZXOs5rb6UCB@}!nG*OPBOBNHiPDZ!cm)6gnWfKF-H^Xx$vvx3tVoYy4h^oRWsuAZATA$j!vQE|?!kG3=L@CP;2bqHh?$lZGKIYmH0?Nj3YDz-@klk0-Z>cWgJ@!;tPApz)DGvkYBlK{3Mps&9Dz0KlCA|tAr>DQ?QW>J2i&PL};3c4ui2TTK4!jo1hQeOo5i+K=&OgHXSfKUW@C!lgSlK!nAgToCrr2X4Q)c*S~_|ml8PrC+UrVxPc5`nnnm)s<VT2AL8SEnH%vVT1&S#2i^>=}<=3)4+VJOl#C8cO=&9X^yRgNRhAFP@)z(W~eO8nmGIJVyEfKFGtF?ElaQ-pNO4T^4H9wi<9Q|1b5#j^y&nsJ<M;4e0jJKc@*rc-eDMNPBi#s@Zk)c=<{@JjZswTdzecNpyiQhTb0D&@@lH$pTi39;W8;-Fbl1%^}q>&9M`SqyV1TkYT=56iocvA&{U2tl0?Ut%r!D3bF64Gs7_KbE+-MVk?C7!N_E0i3>(yR(?Z<&e1ZhY*i11%}YarkUOO+0qsT48k{*~;m)Efl7}M{IorO`K;+vT2-rxqv|W*sfHL9dsAk#IQk1n*N}5B1JVhoWVl!0|XD%Q&RBQ*hbIz&W^U$Ar5nKkoR!OCI^q%F#1`QP;<M0w%xfSL^?n2?AY7KfC4;C$5X3LXWWdN1jU+w{OtiC_FnTcRJ3QxHV;e+BRq|8N4-Y(Bv?6|TgyK5)-L}I$q>bLqQA&YRRGtcEfNBo=_@XM-pf_2MBf)P~SaLjlGWHdf(V%$!3aGFezG_kh+Wl3yg-(OL?YJx+5BFME_v|E<t3>GGKNdXzY^lSc+SYMCE2om~yL%jro-xXeIQFBvA!?qnE&*ijug_9+w_XuxaqNnjSC!_d|J&Ut->9GJ@7-*&d#gdXz^g)!~4G$%B)6HC1Vjm@X4XOH6E%4epTnwDwc2)Pf4(&7HVH0*3o<vrhMRmjyIqWgL71-|h>7!z5Q|-$SI<WwiR1(;ZZDwW)DhXPTXD!D6QputLWKtir_0eC$uTPjx)Diz3ujx8IoZMZLL}f8PpRB_9ayw7GNkV~hh{Ma)f)%BCP~@3BDjsdKC>dn}B*)z4-%~<ddw6LW9e$Ob)sR7Y1Imf6Z6h=n=Dgj`8%bNI9z3GPuj))}EX9oKE`L*t8&0M^`pXB!_JD@2c?f1^kf%3^ESaTj+_rZ0IcITO70oK<e|l67)(1ArLd-G4L_IO4SB%FV0}mMyx}IV&v<>v(iLt8AKf?uD7UUT*$`m=IHpKctT80xe9eMtWcb5NsTDnB3IU)MPFWF-Mf)}b?_a(;)YClUI6eSw^8kAH{W_C4K+3NB+BYz*}9vnZ10KtzUyu)$hbYrLrMF+X@CRgI%W935o+W~3N#fG092n~fJ>SjMz;8;urY8z~$pLrr@gkFjE9KZBp90gD)y2~={)CDUEQ|BL#za2q)?VXOZyEs%LbyG$QtN{Xf<K4M#Z{Jk99l5qPp-$%1%$&T3>FdbDM-V$4<ys7mkiv3bNJert^1$^v8c@;*&X7X#7)Ny(arDDz1HH7@$i!(a@B37o{&fh<VCW0iXAM}<<cDNgMe$r{K%2q;gz5y`WNo@`&vBH#&0>$b9q9qzSy=MaH2~L15cp2=i0JM}3He|>Xa=)Q-#Y&#X?O)ZK8z@@Em1%i1nTGJfE{?MQe68%`?r;<Xb<Kgt{tk-fsrM4<@P3u_xMb(<jfpLq-xw_gzkb7X@>uhg44rLB%D_Us`o*p92q(V!+dED=Om+4Zt%s4Xp2Y3VlW?Jv9n>p1ZT-xk6AO)0*GXD_^eL+!L*zqr>QAWpQTAkIz!;V%cvcf=Db+=H>|<6ha0TNv8r*wz$9z}TE`pR0;nmxeP>{1KkoIz(5$)H`8qR$bOhzuN4YRGcu#%hVL$nRG3->CPfkYnI<cb$3Ios))m0Nk9x%d9K91FbJtkNMh5_+tlolG4E%&rVf9m7mAjTXc<U6xcl?<3dFc>u)lJGSvoO>tNA;}dep|EJHgTh_are_DUD^^X4KDf+<5Ef^PZ`oJ`@AW`PC;7EOW$I+U-fVyY(~w4hXQ?%nENTOWVEjgTQK4|>*{Sl2>71*hnj)4c(uexe=D8?1u-=wef)rZm6L3o%B(6M?59;-U-=4RZda2aLr2Z^CqrcJEWe#ybp6H2gIJOD&)4l-ngAZ8@SHSbGEM9+!3_KQ^Fe(#Kq8n+$Qk`pi4@@Ajg1jSB``q;~XmEZPS?!StaqR)YM7cuQ#gBc*$2=i;vtiu7Py8T<;p4{JHqB*X_CAElwI3BOk_VxJSxYJ?!v!DQC?xf~ECbF*<|~%4R$TG!MRJ$|o>JBsVg6=SY?^<MCIbHO9=IA2dR5Hzz)V)ah2l9P*(n#gO<`R+#(qZ;CSYN6eXv?ifwX9{>XldETYS_(q=-6@M0t&k)OSlL><6b+MM_=Oti)S$_w#*qIQc6~CAn=UnWAhW0UKQhcQ#jV!J?|=O7BbS+jKNy+rZ^5ASwg}wgnSB_hz8?D2H;zvZ3aPP(i2*TS^z`UG`{^^-vT^nu8BTv3uH>zyu<n#MmjJ;aFRii+r0k!Ib(q-5=m#>7|{(X(3O~l&*&Fxn+Z(g^5AMZXO>dOgIYn43*@Isv*2JlmR4@i9_9GsXR()hFw-tNnv;3P4q6iYOz{EN-6e;DGlPGbvMryN*U^uGtV^*Fr_&H;D&b20zLf~%mrnQs~d6R^!;hemE<Jy^3?3nqt&G(tNURw*R+SgD|xi)yu#-O#*&peJ#P3PXhTrS4uE-MTl3(9DD9hTt+qZAeV}$WNO;Tpp^~)V4Ds4r5Q_mpCj%&C1HRjF^v5+ssJ-VRMC_$iBkUcKCjcKpE3d=N`Lgu#3Z0aLERlv6CM&698IlFF8C@Iq!7dWMW;TJkPbo|T6`sYP>sG}aZJlzgn1XyYSaIq-_0|j}CI`>upQYd^WIxC|6>8rH!=>YI@4Ub;WIq}Yp-*R|celNPx?Y*kG_EO5BX~-9rAXHWm7VU;Bp33nc^E`T!cQQ_4B>FoM2pw3?D%2v!kdtgiFo=y`Qmz&E+kDk!qR+?;j5t{Muhf6S+73#orh?W4`C-#5b`dMzJ*dqkCSBo5%3})RDL$2m%oL(WQN|gO$qp5qenWX==-(Yzx~b<`xZe#X62G<4@S>V!HNdiigx;HQi{mn`MOmy_g$hlZ5zA3$`CgMQH_RV-Uujkylz2ica(RxX~f$K%V(8fAoe10QXVR^y!QjROju4oYrzfqAI>=0X1B;5v2IhR9o1(<?(mTt)@jj<xd|;zf=EyL+Uj7>3&ZhH;o$Xaj{Ty?xG&@#d0s*LUVhNVHqASB=8{RA{5AXt5jRBKU{5t|6`7ZPE2Ua?SK~s>D|P~6buc#!gaGb}MnmxTRw?@mE>2wu*O(|a*J0*}HH$Gd`^!$b7-pUvK070J_>$QPYDYjKID@eY++NGR*8~J7#4+<r$KRLkxxG#Y0Ce;GY1@nW{vEq87PlQmB<|3^Xe!9r<;6vI*il0i24j{CJnFLs+0uoBm>{zHClu5Kgfw~cpC%B9(Z7#Y9MG>!BOXbUmCTJyx^y?ds#x%*7jw+p`zO{sVQBUjk?6CG<yHFvBbUWd;I_LQCRgey+8ZTEWR^wjNgFQD?ct*ZZ0@XZm{$nNfy-9>Q8m^InA1sR9y(v=hX88k$MC}A{tlQ@oy6+)2mr)x=BT^VMxiP}3YNXdUBIsavN2;L01<MThQ`L3+ip{PdvtE<y7Fp|&j%H)h^saI00a}tawBu@$ihRZMfHoS#RH`AAQ|l=wV@U5a>CzsLi*{nlD)!lU}TNDsVD<`CJ!uDXVgSRecZurZDMlni2V-bV=>Jv5kV?FR5jC*g)a?lSPN{SulDB&DfKO^=&k<~W7AXg9Y9?KptpIc%fcl>qg*;CUDjL5Z1UgBlT=6l@^lIw)@dJGkHAd9S2VGcC@tv1>fzK}I!!!lH9r#+@9JtZXVo_Ob(zkkO}9~6_^s5%Ot5ZE`uHq$#ZsQYLmRz#2fRv9*_}ki_rbXb$-lT#>W}8Wx#+~IK7{^1&iiFp-IEUuOpjhnFgs{$B)z2H?RYf8V%$7=rb+-bl|ycZxr+8Km&AN6`K_eKXVDYWEi?`+n7UDSK3gzobhv*0B7_?E^2`eYnsR622`5T)V>b7|+(o0VsIAEfUx;shaY7!Z=r<SL1Hg9~-wnAImAtn_RH(lH?WA&kXDD{M<8e%?=J+~SinxM`Rk7uv&;L|0^^5|o$<@l$W9ki+xCO=HiAT8ggPk)BNz+UhoXXA6TOuh2Ctj8}n_mTpx-Fs+h@|C4*cdX>_EJCyo}yii#}25z#ql%OKmq12xH1G2#){}%(pNw=S^UeXT`W_Hu`%e%`0^f9BMNMjIJ6BGdQM)}>wht*@k`qIFK%Sn?6O7MOj>;#DK}|ORogR*D6CzMQ&Yud>^}uw2F=;INGO^KDY)n3{{0@Ox@W+7gbI5$q2wtOy+Uun6)RiV7ST$;Y-*n%f%xf~CIcn+iz_JSfeOTWbJjwn7t4}+$(v&*lZ_3jJW&W3SV406ouv^l^>~0QVGy?R^Vk02o`p<w6^9+1IWs(!tb_<AQvEdo0k=O($X5w9O{X}h9G5%3Qp$1lX<_HdAHer|k1ceZ{Yo(QS?zsF4tb$kd(EQz%qWR!^4Tku6?3-$8wc|d2E<W58fxo_(nltCnEx0&W&1KbY$k^!%z+;PU;+b^KU1L6pB+oRx=(oVxLGVCP0cz^&d@`|LX~q7&`scEB3HrI+%<zUR<_$(5xaB+K_BJ*)CK8Tb~*#J(N%H;j}*;F9tMNdxLk!M92m)!6qoEbFR8x++B@;gjwf9Uu~u<{2{MH?UPXbIy{ycs+@Ovck3AA3tfT(c8?nH4<9Pm$@6;H?ZPS0W)X}G*vIkMWU8-Zi${610xSZcgY>weOmpy6DA1z*F8&Nhn&WqFzikK`}EhVEz?{>!PpiB^bRI*d3%0y#C2)b%oYBb@w!ZhH)bntvz(JP>Q9Ps8)N;8&lUWZ6?2%Oaf|DEj&tYUsR`T6c9?>(6roXb)xwOV@~Ok#4qByzpJEDgf<gUAsE3LGy~p<>-g5R4R_79H75v^n~93n^XxAkr%cqSGrH7o_B?>9Cw*z@1f!=Bx_06tw=ZB!v#pp$n#ElgHXhK_Uii8{hah^D_oKDfn;S(UdGNPTi>Z4RzTlyqQ7udEmMnDtK;sR`QFHK4J#Un=}4mnq9z?UxyBw`1UK0z(}1L8mI*)-Csw$wOK*{5L#(9lbYLkgx!Wj*fFa}fm{U<O#mb(PQ0QprU;!CXpXiSK&(ClZ-J_xs;&><=LSsTZ;jO)-Na^Zy6kL^dv4HDoO|WX_;kq*W5(sP$Xy1i#zIhnB*VqxCL%=mj<f4{u^R{Ljwwz`=zC&IpIwruVvJAx=F&GdtMMp32vLlJKx_YVUWZ{crMj`{Yj8(g06UJRQcg%OsJZuJ#KQ$}^1o$S>{msbnZr;4B@q$y^S?YFDb{_bE}7I_`B6oTRUJclRVCd@R1WBAM<@CwU~^Tc`%iVw+t2Q3A)EplT7TtdqEmbF0WI(((4_-tS6X1uDL0P6kMI_8V+kCinG%nCo$vA#)go1F?%i`wMX1kkJV_{n^bW13XDTeD#=Cm<kBP|$QvIjPxGr8XPaZaIq_!Rs-<-gO>e!Q7d5Gyl5%^l{-~qPeC`&>%sy2Q|m`KKrFG{D}Z@+V^o<U22!&auS6D$BR+%hMThT3D~V2@NWP}VUso+;_eL<WUL2wmAu?q*D?EGSz_W&qBe1_w-3RDqeXbGj2ZMq$X~O!(kq7t>{==>0<bV`Kt`vgLj=Y9sTGEKH=pQfz|!WzU^{ons^yVc7Xrf8@|fK#%sk^~gl6V1|Ik<>MpHc%ras-IfC^P^hL2R4U(5nW`*d*-u=`YMBPw7G=05C9n_v1sl53Z6X5Iflk_Umopf!KtJ$cR+PJTN00<*xG$w{ds^$7w`b-*9BH2Z5<u=u$t3i#{i%*{`+urK%=3)vi0)1In|@hWm;^dn&4G0X%99S}YpzGK0L(M8`!`ECaCQ2rZQNA=JR$eQ>8)r?4o4|+O6Qa*Yf85XGE6r768__7<tnT^knULw^U`3QhPka#n`SuAjtT<3pGuYy_Q`-L<BTV~EmOw)YY6kks1$2?MVAW}${lXxy+#3(V45{2gcW~=_J1>=W2<T9(33tCr;?hHb{MciL4ZPkqS|FnI3>nyA?W7^KzD((;_>2;G9}LZ+1XMjg^j|goFv9<M&(P{;sP2@^spmble5PwY?P#aojn_yZh?qBTPPb$sPmzXjUWt!Y%&$RzXw6SMHh`UY<m1W?BqoIs%SoNI54U9Op)V}fG`3G>a0}B6%!<jvVWBLiIUv?cRUzBI7-1K=-Z?$EfSIkd6lW>DAz`|51ScrJ>bz+zakMLD~CoQ4JHe{A;qp79?sfiT@8HP03~_r7FhRwy<xzTFRE<y<LFjHh9E-ETPFN~ocLP(4cWOY*#@bz+m0*3T=FXk2g8NTgD-++N%xU6@NWjT1dF&lYy9?bGgjU<sAZMm<L>Bvn~?Z|bZ_v;y|@m9<1w-ESwtBvd+NQGTRPjQjGyHPH;?{4Db!(t=>I7M)<%y>c}D~VGcIYM*TdJ@T{^%SZV>xE`6NV2<g|PiVf;bWK50e}0|^5pwhQR`DJv6hv(yg=2m4zUx41HfOZG~@hW1N(<V00c@>qsP3iI-3Jni%c=>e|->R5R{FavmG>lHum77)Af7m;-X8K(vtNUN<S;(Dhkiq_$c%zwV0oKI=b97CZuY;${kMGvWR|4=h7YRacb3{8LJN`U%kG_~_(k`0^OonLAZR@?=8fC*}yyCqL-f%8ov4o^6|f$>BHo-e!Hzngz(nl(v!ZM#&w^~5aR<#^`5kcAQo9M{GJNLtb7W$~ez9sJ@zF#{G1a{0?E!vq;L(znV)SQC6drHUdFLbq%41xB}9It`q{#aDEP&J{J7jA2?GP}80C5_-fU4^g1mQ?pq*QA8N`{uP15kB~D0KKZ(+gJ{ToK>hq7(eJ7bUi6@kpBO)2C0^g<m70~3tJ4%X;8<(WN&I7-7kGW6h?e}~SPjNX{)&mI(d)@Y>yymaU{R9{|H(WeYc#Wb1CA&3E|OJlEXymOwkUp@>V1GjJW~Ro;zVicvHyZkr#QOXZ}wl$cQWL-<0GC~v*_v!-ZF&fY0@%_<Ym$&%AGBS*)=&z0QT_sJ3B45GpTHWU$FX+N^KQgLMxI&N|CN%If?luIyONXuy}kN`iv@?*rG^zQs4Qzw5U`jq+a$mAQrg)hc2vdL#0D5$8U;%hFhB@zjS_w!HMdjtkB78Ei|gH&2!rmLj}8CI>9NN(dDdHJmS8Bk6nw(i$H3P&yAP*hfzIPx7=q=KhnvKUECCPI&V`|!UoG7Mqp`*cU8mKqgn;+HGO!RG@;;mffyi@8FS6e`*Be&GpC2quYp?F0(N(A4~**`Q>t-+ewl)j-gjelzk7y~hv+ILu#Q8RgKv$3H$8>BvPepaVc0Vlh_QopKXXT3vFso{F-3-E{>=@C#dEQNe6W1Q5twkW4s&_E^IZryuv><8@t6k~J9dGE-+hFxbE<r;E^mj7u6JCmeS7Phk`Mw7qPdBzaR-fjSG`mls5Do-@nZ<|_Q{6qaQUk=v@EJu0oWdRjKIufnfe62`*K17sz=JW&8a+8X8i<`;*3Iwuz#bGP)pqjBae)JOSVX&uu1EEzE({OdvpsPsH{qgu}zC!wr6Zu?|odCK<KJz5k3oUjca;6TK$`xmmo+B50=4_Ot1aTeP|y}TM*cdQ<T4su6B0yzj$_fglPMXAzxU|Q~', c1='19a097e81e0eedc2', c2='333a8678026ee5f5'):
    try:
        if hashlib.sha256(data.encode()).hexdigest()[:16] != c1:
            raise ValueError('Primary integrity check failed')
            
        stage1 = base64.b85decode(data)
        if hashlib.blake2b(stage1).hexdigest()[:16] != c2:
            raise ValueError('Secondary integrity check failed')
            
        stage2 = custom_decode(stage1)
        stage3 = zlib.decompress(stage2)
        return marshal.loads(stage3)
    except Exception as e:
        raise RuntimeError(f'Decryption failed: {str(e)}')

exec(decrypt())
